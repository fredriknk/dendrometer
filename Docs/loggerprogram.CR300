'CR300/CR310
'Created by Short Cut (4.4)

'Declare Variables and Units
Public BattV
Public PTemp_C
Public Snow10(3)
Public Snow10_debug(8)
Public Teros21(2)
Public Teros21_2(2)
Public EMS33s(2)
Public CS65X(6)
Public CS65X_2(6)
Public CS65X_3(6)
Public CS65X_4(6)
Public Dendr(6)
'1mv is 4uM at 5v, we are using a 2500mV measuring range with 1/2 vdivider
'So 1mv = 8uM
Public Mult(6)={8,8,8,8,8,8}
'You can offset the sensors here if you want to, 
Public Offs(6)={0,0,0,0,0,0}

Public Dendr_tst(6)

Alias Snow10(1)=Dist
Alias Snow10(2)=Qual
Alias Snow10(3)=T_snow

Alias Snow10_debug(1)=Ref_T_snow
Alias Snow10_debug(2)=Int_T_snow
Alias Snow10_debug(3)=Int_RH_snow
Alias Snow10_debug(4)=Pitch_Snow
Alias Snow10_debug(5)=Roll_snow
Alias Snow10_debug(6)=Supp_V_snow
Alias Snow10_debug(7)=Res_freq_snow
Alias Snow10_debug(8)=Alert_snow

Alias Teros21(1)=maP
Alias Teros21(2)=T_Teros21
Alias Teros21_2(1)=maP_2
Alias Teros21_2(2)=T_Teros21_2

Alias EMS33s(1)=T_EMS
Alias EMS33s(2)=H_EMS

Alias CS65X(1)=VWC
Alias CS65X(2)=EC
Alias CS65X(3)=T
Alias CS65X(4)=P
Alias CS65X(5)=PA
Alias CS65X(6)=VR
Alias CS65X_2(1)=VWC_2
Alias CS65X_2(2)=EC_2
Alias CS65X_2(3)=T_2
Alias CS65X_2(4)=P_2
Alias CS65X_2(5)=PA_2
Alias CS65X_2(6)=VR_2
Alias CS65X_3(1)=VWC_3
Alias CS65X_3(2)=EC_3
Alias CS65X_3(3)=T_3
Alias CS65X_3(4)=P_3
Alias CS65X_3(5)=PA_3
Alias CS65X_3(6)=VR_3
Alias CS65X_4(1)=VWC_4
Alias CS65X_4(2)=EC_4
Alias CS65X_4(3)=T_4
Alias CS65X_4(4)=P_4
Alias CS65X_4(5)=PA_4
Alias CS65X_4(6)=VR_4

'Define the units for each measurement
Units BattV=Volts
Units PTemp_C=Deg C

Units Dist=m
Units Qual=unitless
Units T_snow=Deg C

Units Ref_T_snow=Deg C
Units Int_T_snow=Deg C
Units Int_RH_snow=%
Units Pitch_Snow=Deg
Units Roll_snow=Deg
Units Supp_V_snow=V
Units Res_freq_snow=kHz
Units Alert_snow=unitless

Units maP = kPa
Units T_Teros21= Deg C

Units maP_2 = kPa
Units T_Teros21_2= Deg C

Units T_EMS= Deg C
Units H_EMS= %

Units Dendr=uM
Units Dendr_tst=uM
Units VWC=m^3/m^3
Units EC=dS/m
Units T=Deg C
Units P=unitless
Units PA=nSec
Units VR=unitless
Units VWC_2=m^3/m^3
Units EC_2=dS/m
Units T_2=Deg C
Units P_2=unitless
Units PA_2=nSec
Units VR_2=unitless
Units VWC_3=m^3/m^3
Units EC_3=dS/m
Units T_3=Deg C
Units P_3=unitless
Units PA_3=nSec
Units VR_3=unitless
Units VWC_4=m^3/m^3
Units EC_4=dS/m
Units T_4=Deg C
Units P_4=unitless
Units PA_4=nSec
Units VR_4=unitless

'Define Data Tables
DataTable(Table1,True,-1)
	DataInterval(0,60,Min,10)
  Average(1,maP,IEEE4,False)
  Average(1,T_Teros21,FP2,False)
  Average(1,maP_2,IEEE4,False)
  Average(1,T_Teros21_2,FP2,False)
  Average(1,T_EMS,FP2,False)
  Average(1,H_EMS,FP2,False)
	Average(1,Dist,FP2,False)
	Average(1,Qual,FP2,False)
	Average(1,T_snow,FP2,False)
	Average(1,VWC,FP2,False)
	Average(1,EC,FP2,False)
	Average(1,T,FP2,False)
	Average(1,P,FP2,False)
	Average(1,PA,FP2,False)
	Average(1,VR,FP2,False)
	Average(1,VWC_2,FP2,False)
	Average(1,EC_2,FP2,False)
	Average(1,T_2,FP2,False)
	Average(1,P_2,FP2,False)
	Average(1,PA_2,FP2,False)
	Average(1,VR_2,FP2,False)
	Average(1,VWC_3,FP2,False)
	Average(1,EC_3,FP2,False)
	Average(1,T_3,FP2,False)
	Average(1,P_3,FP2,False)
	Average(1,PA_3,FP2,False)
	Average(1,VR_3,FP2,False)
	Average(1,VWC_4,FP2,False)
	Average(1,EC_4,FP2,False)
	Average(1,T_4,FP2,False)
	Average(1,P_4,FP2,False)
	Average(1,PA_4,FP2,False)
	Average(1,VR_4,FP2,False)
EndTable
'Iee measurements for theese, as the max values are over 7999
DataTable(Table2,True,-1)
  DataInterval(0,10,Min,10)
	Average(1,Dendr(1),IEEE4,False)
	Average(1,Dendr(2),IEEE4,False)
	Average(1,Dendr(3),IEEE4,False)
	Average(1,Dendr(4),IEEE4,False)
	Average(1,Dendr(5),IEEE4,False)
	Average(1,Dendr(6),IEEE4,False)
EndTable

DataTable(Table3,True,-1)
	DataInterval(0,1440,Min,10)
	Minimum(1,BattV,FP2,False,False)
	Average(1,PTemp_C,FP2,False)
	Minimum(1,PTemp_C,FP2,False,False)
	Maximum(1,PTemp_C,FP2,False,False)
EndTable

'Main Program
BeginProg
	'Main Scan
	
  'Scan time is how often the loop will run, the lower the time, the more
  'points to average in table 3, but at the cost of higher power consumption
	Scan(20,Sec,1,0)
    SW12(1)  
    'Delay to let powersupply up and running before analog measurement'
    Delay (0,200,mSec)
    'Default CR300 Datalogger Battery Voltage measurement 'BattV'
		Battery(BattV)
		'Default CR300 Datalogger Processor Temperature measurement 'PTemp_C'
		PanelTemp(PTemp_C,50)
		'Generic Single-Ended Voltage measurements with 8x multiplier 'Dendr()'
		'See top of code, samples all six sensors in one go'
		VoltSe(Dendr(),6,mV2500,1,True,500,50,Mult(),Offs())
		
    'We dont need theese measurements as often, so we only do them every 10 min'
    If TimeIntoInterval(0,10,Min)
      	'Snow sensor addr 10'
        SDI12Recorder(Snow10(),C2,"9","M3!",1,0,-1)
	      'Teros 21 addr 0'
        SDI12Recorder(Teros21(),C2,"0","M!",1,0,-1)
        'Teros 21_2 addr 4'
        SDI12Recorder(Teros21_2(),C2,"4","M!",1,0,-1)
        'EMS33s address 1'
        SDI12Recorder(EMS33s(),C2,"1","M!",1,0,-1)
      	'CS650/CS655 Water Content Reflectometer measurements 'VWC', 'EC', 'T','P', 'PA', and 'VR'		
      	SDI12Recorder(CS65X(),C2,"2","M3!",1,0,-1)
      	'CS650/CS655 Water Content Reflectometer measurements 'VWC_2', 'EC_2', 'T_2','P_2', 'PA_2', and 'VR_2'
      	SDI12Recorder(CS65X_2(),C2,"3","M3!",1,0,-1)
      	'CS650/CS655 Water Content Reflectometer measurements 'VWC_3', 'EC_3', 'T_3','P_3', 'PA_3', and 'VR_3'
      	SDI12Recorder(CS65X_3(),C2,"5","M3!",1,0,-1)
      	'CS650/CS655 Water Content Reflectometer measurements 'VWC_4', 'EC_4', 'T_4','P_4', 'PA_4', and 'VR_4'
      	SDI12Recorder(CS65X_4(),C2,"7","M3!",1,0,-1)
    EndIf
    'Turn off the supply, we dont need to power the sensors when not in use
    'SW12(0)
		
		'Call Data Tables and Store Data
		CallTable Table1
		CallTable Table2
		CallTable Table3
	NextScan
EndProg
